img_size: 128
batch_size: 1
learning_rate: 0.0001
num_epochs: 50

training time: 00:16:08

KnotID(
  (feature_learning): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Conv2d(3, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Conv2d(10, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): ReLU()
    (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (7): Conv2d(20, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (8): ReLU()
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Conv2d(40, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU()
    (12): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (13): Conv2d(80, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (14): ReLU()
    (15): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (classification): Sequential(
    (0): Flatten(start_dim=1, end_dim=-1)
    (1): Linear(in_features=2560, out_features=768, bias=True)
    (2): ReLU()
    (3): Linear(in_features=768, out_features=256, bias=True)
    (4): ReLU()
    (5): Linear(in_features=256, out_features=64, bias=True)
    (6): ReLU()
    (7): Linear(in_features=64, out_features=10, bias=True)
  )
)

==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
KnotID                                   [1, 10]                   --
├─Sequential: 1-1                        [1, 160, 4, 4]            --
│    └─Dropout: 2-1                      [1, 3, 128, 128]          --
│    └─Conv2d: 2-2                       [1, 10, 128, 128]         280
│    └─ReLU: 2-3                         [1, 10, 128, 128]         --
│    └─MaxPool2d: 2-4                    [1, 10, 64, 64]           --
│    └─Conv2d: 2-5                       [1, 20, 64, 64]           1,820
│    └─ReLU: 2-6                         [1, 20, 64, 64]           --
│    └─MaxPool2d: 2-7                    [1, 20, 32, 32]           --
│    └─Conv2d: 2-8                       [1, 40, 32, 32]           7,240
│    └─ReLU: 2-9                         [1, 40, 32, 32]           --
│    └─MaxPool2d: 2-10                   [1, 40, 16, 16]           --
│    └─Conv2d: 2-11                      [1, 80, 16, 16]           28,880
│    └─ReLU: 2-12                        [1, 80, 16, 16]           --
│    └─MaxPool2d: 2-13                   [1, 80, 8, 8]             --
│    └─Conv2d: 2-14                      [1, 160, 8, 8]            115,360
│    └─ReLU: 2-15                        [1, 160, 8, 8]            --
│    └─MaxPool2d: 2-16                   [1, 160, 4, 4]            --
├─Sequential: 1-2                        [1, 10]                   --
│    └─Flatten: 2-17                     [1, 2560]                 --
│    └─Linear: 2-18                      [1, 768]                  1,966,848
│    └─ReLU: 2-19                        [1, 768]                  --
│    └─Linear: 2-20                      [1, 256]                  196,864
│    └─ReLU: 2-21                        [1, 256]                  --
│    └─Linear: 2-22                      [1, 64]                   16,448
│    └─ReLU: 2-23                        [1, 64]                   --
│    └─Linear: 2-24                      [1, 10]                   650
==========================================================================================
Total params: 2,334,390
Trainable params: 2,334,390
Non-trainable params: 0
Total mult-adds (M): 36.41
==========================================================================================
Input size (MB): 0.20
Forward/backward pass size (MB): 2.55
Params size (MB): 9.34
Estimated Total Size (MB): 12.08
==========================================================================================