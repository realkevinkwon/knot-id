img_size: 128
batch_size: 1
learning_rate: 0.0001
num_epochs: 25

training time: 00:05:15

KnotID(
  (feature_learning): Sequential(
    (0): Conv2d(3, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(10, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): ReLU()
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(20, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU()
    (8): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (9): Conv2d(40, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (10): ReLU()
    (11): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (12): Conv2d(80, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (13): ReLU()
    (14): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (15): Conv2d(160, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (16): ReLU()
    (17): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (classification): Sequential(
    (0): Flatten(start_dim=1, end_dim=-1)
    (1): Linear(in_features=1280, out_features=10, bias=True)
  )
)

==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
KnotID                                   [1, 10]                   --
├─Sequential: 1-1                        [1, 320, 2, 2]            --
│    └─Conv2d: 2-1                       [1, 10, 128, 128]         280
│    └─ReLU: 2-2                         [1, 10, 128, 128]         --
│    └─MaxPool2d: 2-3                    [1, 10, 64, 64]           --
│    └─Conv2d: 2-4                       [1, 20, 64, 64]           1,820
│    └─ReLU: 2-5                         [1, 20, 64, 64]           --
│    └─MaxPool2d: 2-6                    [1, 20, 32, 32]           --
│    └─Conv2d: 2-7                       [1, 40, 32, 32]           7,240
│    └─ReLU: 2-8                         [1, 40, 32, 32]           --
│    └─MaxPool2d: 2-9                    [1, 40, 16, 16]           --
│    └─Conv2d: 2-10                      [1, 80, 16, 16]           28,880
│    └─ReLU: 2-11                        [1, 80, 16, 16]           --
│    └─MaxPool2d: 2-12                   [1, 80, 8, 8]             --
│    └─Conv2d: 2-13                      [1, 160, 8, 8]            115,360
│    └─ReLU: 2-14                        [1, 160, 8, 8]            --
│    └─MaxPool2d: 2-15                   [1, 160, 4, 4]            --
│    └─Conv2d: 2-16                      [1, 320, 4, 4]            461,120
│    └─ReLU: 2-17                        [1, 320, 4, 4]            --
│    └─MaxPool2d: 2-18                   [1, 320, 2, 2]            --
├─Sequential: 1-2                        [1, 10]                   --
│    └─Flatten: 2-19                     [1, 1280]                 --
│    └─Linear: 2-20                      [1, 10]                   12,810
==========================================================================================
Total params: 627,510
Trainable params: 627,510
Non-trainable params: 0
Total mult-adds (M): 41.62
==========================================================================================
Input size (MB): 0.20
Forward/backward pass size (MB): 2.58
Params size (MB): 2.51
Estimated Total Size (MB): 5.29
==========================================================================================